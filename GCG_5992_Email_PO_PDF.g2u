Program.Sub.ScreenSU.Start
Gui.F_ContactList..create
Gui.F_ContactList..caption("Email Purchase Order")
Gui.F_ContactList..size(7380,6240)
Gui.F_ContactList..minx(0)
Gui.F_ContactList..miny(0)
Gui.F_ContactList..position(0,0)
Gui.F_ContactList..event(UnLoad,f_contactlist_unload)
Gui.F_ContactList..forecolor(0)
Gui.F_ContactList..BackColor(-2147483633)
Gui.F_ContactList..maxbutton(False)
Gui.F_ContactList..mousepointer(0)
Gui.F_ContactList..sizeable(False)
Gui.F_ContactList.lstEmails.create(listbox)
Gui.F_ContactList.lstEmails.size(3045,900)
Gui.F_ContactList.lstEmails.position(4005,315)
Gui.F_ContactList.lstEmails.tabstop(True)
Gui.F_ContactList.lstEmails.tabindex(4)
Gui.F_ContactList.lstEmails.Event(Click,lstEmails_Click)
Gui.F_ContactList.txtEmail.create(textbox,"",True,3690,300,0,105,930,True,0,Arial,8,-2147483643,1)
Gui.F_ContactList.txtEmail.defaultvalue("")
Gui.F_ContactList.txtEmail.tabstop(True)
Gui.F_ContactList.txtEmail.tabindex(2)
Gui.F_ContactList.cboContact.create(combobox)
Gui.F_ContactList.cboContact.size(3690,330)
Gui.F_ContactList.cboContact.position(105,315)
Gui.F_ContactList.cboContact.event(Click,cbocontact_click)
Gui.F_ContactList.cboContact.defaultvalue("")
Gui.F_ContactList.cboContact.tabstop(True)
Gui.F_ContactList.cboContact.tabindex(1)
Gui.F_ContactList.cmdAdd.create(button)
Gui.F_ContactList.cmdAdd.caption("Add")
Gui.F_ContactList.cmdAdd.size(840,375)
Gui.F_ContactList.cmdAdd.position(105,1275)
Gui.F_ContactList.cmdAdd.event(Click,cmdadd_click)
Gui.F_ContactList.cmdAdd.defaultvalue("")
Gui.F_ContactList.cmdAdd.tabstop(True)
Gui.F_ContactList.cmdAdd.tabindex(3)
Gui.F_ContactList.cmdRemove.create(button)
Gui.F_ContactList.cmdRemove.caption("Remove")
Gui.F_ContactList.cmdRemove.size(810,375)
Gui.F_ContactList.cmdRemove.position(1095,1275)
Gui.F_ContactList.cmdRemove.event(Click,cmdremove_click)
Gui.F_ContactList.cmdRemove.defaultvalue("")
Gui.F_ContactList.cmdRemove.tabstop(True)
Gui.F_ContactList.cmdRemove.tabindex(5)
Gui.F_ContactList.lbl1.create(label,"Choose an existing contact",True,2565,255,1,105,105,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl1.defaultvalue("")
Gui.F_ContactList.lbl2.create(label,"Enter an email address",True,2850,255,1,105,720,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl2.defaultvalue("")
Gui.F_ContactList.cmdSend.create(button)
Gui.F_ContactList.cmdSend.caption("Send")
Gui.F_ContactList.cmdSend.size(855,360)
Gui.F_ContactList.cmdSend.position(105,5250)
Gui.F_ContactList.cmdSend.event(Click,cmdsend_click)
Gui.F_ContactList.cmdSend.defaultvalue("")
Gui.F_ContactList.cmdSend.tabstop(True)
Gui.F_ContactList.cmdSend.tabindex(8)
Gui.F_ContactList.mltxtBody.create(textboxm)
Gui.F_ContactList.mltxtBody.size(6915,2595)
Gui.F_ContactList.mltxtBody.position(105,2595)
Gui.F_ContactList.mltxtBody.defaultvalue("")
Gui.F_ContactList.mltxtBody.tabstop(True)
Gui.F_ContactList.mltxtBody.tabindex(7)
Gui.F_ContactList.txtSubject.create(textbox,"",True,6930,300,0,90,1950,True,0,Arial,8,-2147483643,1)
Gui.F_ContactList.txtSubject.maxLength(72)
Gui.F_ContactList.txtSubject.defaultvalue("")
Gui.F_ContactList.txtSubject.tabstop(True)
Gui.F_ContactList.txtSubject.tabindex(6)
Gui.F_ContactList.lbl3.create(label,"Subject",True,1935,255,1,105,1725,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl3.defaultvalue("")
Gui.F_ContactList.lbl4.create(label,"Body",True,1935,255,1,105,2325,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl4.defaultvalue("")
Gui.F_ContactList.lbl5.create(label,"Recipients",True,1935,255,1,4005,105,True,0,Arial,8,-2147483633,0)
Gui.F_ContactList.lbl5.defaultvalue("")
Gui.F_ContactList.chkUseVendorCurrency.Create(CheckBox)
Gui.F_ContactList.chkUseVendorCurrency.Size(2265,285)
Gui.F_ContactList.chkUseVendorCurrency.Position(4005,1260)
Gui.F_ContactList.chkUseVendorCurrency.Caption("User Vendor Currency")
Gui.F_ContactList.chkUseVendorCurrency.Value(1)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
Variable.Global.sCompNo.Declare(String)
Variable.Global.sCompType.Declare(String)
Variable.Global.sList.Declare(String)
Variable.Global.sOrderNo.Declare(String)
Variable.Global.sCustPO.Declare(String)
Variable.Global.sCustomer.Declare(String)
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
''11/7/2018 Email POs via outlook if Outlook is present on client, if not it will use default GAB and Courier. 
'coded onsite by SFF for Thompson Surgical Instruments.
'runs on Hook 16911 Email Button

'TJS. May 2020 - Updated original project (5358) to pull unique vendor contact from CRM for emailing POs.  Updated 
'error handling and connection strings.
V.Local.bCheck.Declare(Boolean)

F.ODBC.Connection!conts.OpenCompanyConnection

'Get values from GSS
V.Global.sCompNo.Set(V.Passed.000011)
V.Global.sOrderNo.Set(V.Passed.000008)
F.Intrinsic.String.Format(V.Global.sOrderNo,0000000,V.Global.sOrderNo)
V.Global.sCompType.Set("V")

'Set override flag
V.Passed.777777.Set(1)

V.Global.sList.Redim(-1,-1)

'Check Outlook Presence
F.Automation.MSOutlook.CheckPresence(V.Local.bCheck)

'if outlook is present, do something else.
F.Intrinsic.Control.If(V.Local.bCheck,=,True)
	'call outlook logic if Outlook is Present on Machine
	F.Intrinsic.UI.InvokeWaitDialog("Launching Outlook Email... Please Wait")
	F.Intrinsic.Control.CallSub(TriggerOutlookMsg)
F.Intrinsic.Control.Else
	'use default GAB and Courier if Outlook not present.
	F.Intrinsic.Control.CallSub("PopContacts")
	F.Intrinsic.Control.CallSub(PopDefaultContact)
	F.Intrinsic.Control.CallSub(Popdefaulttext)
	F.Intrinsic.Control.CallSub(SetIcon)
	Gui.F_ContactList..Show
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.cmdadd_click.Start
F.Intrinsic.Control.Try

V.Local.i.Declare(Long)
V.Local.bFound.Declare(Boolean,False)
V.Local.sEmail.Declare(String)
V.Local.iUBound.Declare(long)

'Exit if no email selected or entered
F.Intrinsic.Control.If(V.Screen.F_ContactList!txtEmail.Text,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'creates delimiter
F.Intrinsic.String.Build("{1}*!*{0}",V.Screen.F_ContactList!txtEmail.Text,V.Screen.F_ContactList!txtEmail.MetaData0,V.Local.sEmail)

'Search for email address in memory array  to avoid duplicates
F.Intrinsic.Control.For(V.Local.i,0,V.Global.sList.UBound,1)
	F.Intrinsic.Control.If(V.Local.sEmail,=,V.Global.sList(V.Local.i))
		V.Local.bFound.Set(True)
		F.Intrinsic.Control.ExitFor(V.Local.i)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.i)

'If email not found in list, add it to memory array
F.Intrinsic.Control.If(V.Local.bFound,=,False)
	F.Intrinsic.Control.If(V.Global.sList.UBound,=,-1)
		V.Global.sList.Redim(0,0)
	F.Intrinsic.Control.Else
		V.Global.sList.RedimPreserve(1)
	F.Intrinsic.Control.EndIf
	V.Global.sList(V.Global.sList.UBound).Set(V.Local.sEmail)
F.Intrinsic.Control.EndIf

'Fill list from memory array
F.Intrinsic.Control.CallSub("FillList")

'Clear email selection
Gui.F_ContactList.cboContact.ListIndex(0)
Gui.F_ContactList.txtEmail.Text("")
Gui.F_ContactList.txtEmail.SetMetaData("")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdadd_click.End

Program.Sub.f_contactlist_unload.Start	
F.Intrinsic.Control.Try

F.ODBC.Connection!conts.close

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.f_contactlist_unload.End

Program.Sub.cmdremove_click.Start
F.Intrinsic.Control.Try
V.Local.i.Declare(Long)
V.Local.iStart.Declare(Long)
V.Local.iEnd.Declare(Long)
V.Local.iTemp.Declare(Long)
V.Local.bFound.Declare(Boolean)
V.Local.sEmail.Declare(String)

'Exit if no email selected in list
F.Intrinsic.Control.If(V.Screen.F_ContactList!lstEmails.Text,=,"")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

'creates delimiter
F.Intrinsic.String.Build("{1}*!*{0}",V.Screen.F_ContactList!txtEmail.Text,V.Screen.F_ContactList!txtEmail.MetaData0,V.Local.sEmail)

'Search memory array for ordinal of selected email
F.Intrinsic.Control.For(V.Local.iStart,0,V.Global.sList.UBound,1)
	F.Intrinsic.Control.If(V.Local.sEmail,=,V.Global.sList(V.Local.iStart))
		V.Local.bFound.Set(True)
		F.Intrinsic.Control.ExitFor(V.Local.iStart)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(V.Local.iStart)

'Shift memory array to remove selected email
F.Intrinsic.Math.Sub(V.Global.sList.UBound,1,V.Local.iEnd)
F.Intrinsic.Control.For(V.Local.i,V.Local.iStart,V.Local.iEnd,1)
	F.Intrinsic.Math.Add(V.Local.i,1,V.Local.iTemp)
	V.Global.sList(V.Local.i).set(V.Global.sList(V.Local.iTemp))
F.Intrinsic.Control.Next(V.Local.i)

F.Intrinsic.Control.If(V.Global.sList.UBound,=,0)
	V.Global.sList.Redim(-1,-1)
F.Intrinsic.Control.else
	V.Global.sList.RedimPreserve(0,V.Local.iEnd)
F.Intrinsic.Control.EndIf

'Fill list from memory array
F.Intrinsic.Control.CallSub("FillList")

'Clear email selection
Gui.F_ContactList.cboContact.ListIndex(0)
Gui.F_ContactList.txtEmail.Text("")
Gui.F_ContactList.txtEmail.SetMetaData("")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdremove_click.End

Program.Sub.cmdsend_click.Start
F.Intrinsic.Control.Try
V.Local.i.Declare(Long)
V.Local.sRcptEmail.Declare(String)
V.Local.sRcptName.Declare(String)
V.Local.sSenderEmail.Declare(String)
V.Local.sSenderName.Declare(String)
V.Local.sAttach.Declare(String)
V.Local.sParamName.Declare(String)
V.Local.sParamVal.Declare(String)
V.Local.sTemp.Declare(String)
V.Local.sPN.Declare(String)
V.Local.sPV.Declare(String)
V.Local.sCallParams.Declare(String)
V.Local.iUserID.Declare(Long)
V.Local.sFromEmail.Declare(String)
V.Local.sToEmail.Declare(String)
V.Local.iBIRUNID.Declare(Long)
V.Local.iLOGID.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.sRecipients.Declare(String)
V.Local.iQtyDec.Declare(Long)
V.Local.sSql.Declare(String)
V.Local.bUseVendorCurrency.Declare(boolean)
V.Local.sReportID.Declare(String)

'getting run id and log id
F.Global.BI.GetRunID(V.Local.iBIRUNID)
F.Global.BI.StartLogging(V.Local.iBIRUNID,002801,-1,"",V.Local.iLOGID)

'End script if no emails added to list
F.Intrinsic.Control.If(V.Global.sList.UBound,=,-1)
	F.Intrinsic.Control.CallSub("f_contactlist_unload")
F.Intrinsic.Control.EndIf

V.Local.sRcptName.Set("")
'Get email address of GS User
F.Global.Security.GetUserEmail(V.Caller.User,V.Local.sSenderEmail)
'Alert and end script if no email found for GS User
F.Intrinsic.control.if(V.Local.sSenderEmail,=,"")
	F.Intrinsic.UI.Msgbox("Error in email procedure.  The GS User does not have an email address associated with it in User Security Maintenance.")
	F.Intrinsic.Control.CallSub("f_contactlist_unload")
F.Intrinsic.control.endif
'Get full name of GS User
F.Global.Security.GetFullName(V.Caller.User,V.Local.sSenderName)

'Set attachment filename and path
F.Intrinsic.String.Build("{0}\Orders\{1}.pdf",V.Caller.PluginsDir,V.Global.sOrderNo,V.Local.sAttach)

'Adding value to QTYDEC param since the decimal values weren't being honored.
'Get Decimal Quantity on PO (Company Options AdV. > Purchasing > Set Decimal Value)
F.ODBC.Connection!conts.OpenLocalRecordsetRO("rst","Select (Case When F_LONG = 1 Then 4 When F_LONG = 2 Then 2  Else 0  End) AS QtyDec FROM OP_HEADER where ID = '400289'")
F.Intrinsic.Control.If(V.ODBC.conts!rst.EOF,=,False)
	V.Local.iQtyDec.Set(V.ODBC.conts!rst.FieldValLong!QtyDec)
F.Intrinsic.Control.EndIf
F.ODBC.conts!rst.Close

'Check if the report should be generated using vendor currency
V.Local.bUseVendorCurrency.Set(V.Screen.F_ContactList!chkUseVendorCurrency.Value)

'Call GS program to build BI table data
F.Intrinsic.Control.If(V.Local.bUseVendorCurrency,=,True)
	F.Intrinsic.String.Build("{0}!*!S!*! !*!N!*!Y",V.Global.sOrderNo,V.Local.sCallParams)	
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("{0}!*!S!*! !*!N!*!N",V.Global.sOrderNo,V.Local.sCallParams)	
F.Intrinsic.Control.EndIf

F.Global.General.CallWrapperSyncBio(915000,V.Local.sCallParams)

'Call BI Order Acknowledgement report
'had to add in the qtydec param, otherwise cr is throwing up with missing parameter values...
V.Local.sPN.Set("Terminal*!*ReportID*!*UseVendorCurr*!*PRTCNFRM*!*PROGRAM*!*PRTHIST*!*QTYDEC")

'Check if the vendor has a custom report id associated to use it instead of default:2801
F.Intrinsic.String.Build("SELECT BI_PO_RPT_ID FROM V_VENDOR_ADDL WHERE VENDOR = '{0}'",V.Global.sCompNo,V.Local.sSql)
F.ODBC.Connection!conts.OpenLocalRecordsetRO("rst",V.Local.sSql)
F.Intrinsic.Control.If(V.ODBC.conts!rst.EOF,=,False)
	F.Intrinsic.Control.If(V.ODBC.conts!rst.FieldValTrim!BI_PO_RPT_ID,=,V.Ambient.Null,or,V.ODBC.conts!rst.FieldValTrim!BI_PO_RPT_ID,=,"000000",V.ODBC.conts!rst.FieldValTrim!BI_PO_RPT_ID,=,"0")
		'Set the default report id 
		V.Local.sReportID.Set("002801")	
	F.Intrinsic.Control.Else	
		'Set the custom report id for the vendor
		V.Local.sReportID.Set(V.ODBC.conts!rst.FieldValTrim!BI_PO_RPT_ID)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Local.bUseVendorCurrency,=,True)	
	F.Intrinsic.String.Build("{0}*!*{1}*!*Y*!* *!* *!* *!*{2}*!* *!*",V.Caller.Terminal,V.Local.sReportID,V.Local.iQtyDec,V.Local.sPV)
F.Intrinsic.Control.Else	
	F.Intrinsic.String.Build("{0}*!*{1}*!* *!* *!* *!* *!*{2}*!* *!*",V.Caller.Terminal,V.Local.sReportID,V.Local.iQtyDec,V.Local.sPV)
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Split(V.Local.sPN,"*!*",V.Local.sParamName)
F.Intrinsic.String.Split(V.Local.sPV,"*!*",V.Local.sParamVal)

F.Global.BI.StopLogging(V.Local.iLOGID)

F.Global.BI.RunReportPreProcessor(V.Local.iBIRUNID,V.Local.iLOGID,V.Local.sPN,V.Local.sPV,"",4,True,"",-1,"",0,V.Local.sAttach,"",V.Local.iRet)

F.Intrinsic.String.Join(V.Global.sList,"@!@",V.Local.sRecipients)

F.Global.Security.GetUserId(V.Caller.User,V.Caller.CompanyCode,V.Local.iUserID)
F.Intrinsic.String.Build("{0}*!*{1}",V.Local.sSenderEmail,V.Local.sSenderName,V.Local.sFromEmail)
F.Intrinsic.String.Build("{0}.pdf*!*{1}\Orders\",V.Global.sOrderNo,V.Caller.PluginsDir,V.Local.sAttach)

Function.Global.Messaging.QueueMessage(V.Caller.CompanyCode,V.local.iUserID,"",V.Screen.F_ContactList!txtSubject.Text,V.Local.sFromEmail,V.Local.sRecipients,V.Screen.F_ContactList!mltxtBody.Text,5,,False,,,,,,,,V.Local.sAttach,False)

'End script
F.Intrinsic.Control.CallSub("f_contactlist_unload")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cmdsend_click.End

Program.Sub.cbocontact_click.Start
F.Intrinsic.Control.Try
V.Local.iPos.Declare(Long)
V.Local.sEmail.Declare(String)

F.Intrinsic.Control.If(V.Screen.F_ContactList!cboContact.Text,<>,"")
	'Select contact from drop down list - populate textbox
	F.Intrinsic.String.Instr(V.Screen.F_ContactList!cboContact.Text,"<",V.Local.ipos)
	F.Intrinsic.Math.Sub(V.Local.iPos,2,V.Local.iPos)
	'put name in meta data
	F.Intrinsic.String.Left(V.Screen.F_ContactList!cboContact.Text,V.Local.iPos,V.Local.sEmail)
	Gui.F_ContactList.txtEmail.SetMetaData(V.Local.sEmail)
	F.Intrinsic.Math.Add(V.Local.iPos,2,V.Local.iPos)
	F.Intrinsic.String.mid(V.Screen.F_ContactList!cboContact.Text,V.Local.iPos,V.Local.sEmail)
	F.Intrinsic.String.Replace(V.Local.sEmail,"<","",V.Local.sEmail)
	F.Intrinsic.String.Replace(V.Local.sEmail,">","",V.Local.sEmail)
	Gui.F_ContactList.txtEmail.Text(V.Local.sEmail)
F.Intrinsic.Control.Else
	Gui.F_ContactList.txtEmail.Text("")
F.Intrinsic.Control.endif

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.cbocontact_click.End

Program.Sub.PopContacts.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare(String)
V.Local.sTemp.Declare(String)

'Add blank item to drop down list
Gui.F_ContactList.cboContact.AddItem("")

'Fill drop down list with contacts/emails for the customer on the order
F.Intrinsic.String.Build("Select Name, Alt_ID, Email1, Email2, Name_Last, Name_First from Contact where Cust='{0}' and Type = '{1}' order by Name_Last, Name_First",V.Global.sCompNo,V.Global.sCompType,V.Local.sSQL)
F.ODBC.Connection!conts.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.DoUntil(V.ODBC.conts!rst.EOF,=,True)
	F.Intrinsic.Control.If(V.ODBC.conts!rst.FieldValTrim!Email1,<>,"")
		F.Intrinsic.String.Build("{0} <{1}>",V.ODBC.conts!rst.FieldValTrim!Name,V.ODBC.conts!rst.FieldValTrim!Email1,V.Local.sTemp)
		Gui.F_ContactList.cboContact.AddItem(V.Local.sTemp)
	F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.If(V.ODBC.conts!rst.FieldValTrim!Email2,<>,"")
		F.Intrinsic.String.Build("{0} <{1}>",V.ODBC.conts!rst.FieldValTrim!Name,V.ODBC.conts!rst.FieldValTrim!Email2,V.Local.sTemp)
		Gui.F_ContactList.cboContact.AddItem(V.Local.sTemp)
	F.Intrinsic.Control.EndIf

	F.ODBC.conts!rst.MoveNext
F.Intrinsic.Control.Loop
F.ODBC.conts!rst.Close

'Also add emails entered from PO > Open > Email field
F.Intrinsic.String.Build("select CONTACT_EMAIL, CONTACT_NAME from V_PO_VENDOR_BUY WHERE VENDOR = '{0}' and PURCHASE_ORDER = '{1}'",V.Global.sCompNo,V.Global.sOrderNo,V.Local.sSQL)
F.ODBC.Connection!conts.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.DoUntil(V.ODBC.conts!rst.EOF,=,True)
	F.Intrinsic.Control.If(V.ODBC.conts!rst.FieldValTrim!CONTACT_EMAIL,<>,"")
		F.Intrinsic.String.Build("{0} <{1}>",V.ODBC.conts!rst.FieldValTrim!CONTACT_NAME,V.ODBC.conts!rst.FieldValTrim!CONTACT_EMAIL,V.Local.sTemp)
		Gui.F_ContactList.cboContact.AddItem(V.Local.sTemp)
	F.Intrinsic.Control.EndIf
	F.ODBC.conts!rst.MoveNext
F.Intrinsic.Control.Loop
F.ODBC.conts!rst.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.PopContacts.End

Program.Sub.PopDefaultContact.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare(String)

F.Intrinsic.String.Build("select CONTACT_EMAIL, CONTACT_NAME from V_PO_VENDOR_BUY WHERE VENDOR = '{0}' and PURCHASE_ORDER = '{1}'",V.Global.sCompNo,V.Global.sOrderNo,V.Local.sSQL)
F.ODBC.Connection!conts.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conts!rst.EOF,=,False)
	F.Intrinsic.Control.If(V.ODBC.conts!rst.FieldValTrim!CONTACT_EMAIL,<>,V.Ambient.Null,or,V.ODBC.conts!rst.FieldValTrim!CONTACT_EMAIL,<>,"")
		Gui.F_ContactList.txtEmail.SetMetaData(V.ODBC.conts!rst.FieldValTrim!CONTACT_NAME)
		Gui.F_ContactList.txtEmail.Text(V.ODBC.conts!rst.FieldValTrim!CONTACT_EMAIL)
		F.Intrinsic.Control.CallSub(cmdadd_click)
	F.Intrinsic.Control.Else 'If PO header email is blank then look for a primary contact in CRM contacts
		F.Intrinsic.String.Build("Select Name, Alt_ID, Email1, Email2, Name_Last, Name_First from Contact where Cust='{0}' and Type = '{1}' and PRI_CNTCT='1' order by Name_Last, Name_First",V.Global.sCompNo,V.Global.sCompType,V.Local.sSQL)
		F.ODBC.Connection!conts.OpenRecordsetRO("rst1",V.Local.sSQL)
		F.Intrinsic.Control.If(V.ODBC.conts!rst1.EOF,=,False)
			F.Intrinsic.Control.If(V.ODBC.conts!rst1.FieldValTrim!Email1,<>,V.Ambient.Null,or,V.ODBC.conts!rst1.FieldValTrim!Email1,<>,"")
				Gui.F_ContactList.txtEmail.SetMetaData(V.ODBC.conts!rst1.FieldValTrim!NAME)
				Gui.F_ContactList.txtEmail.Text(V.ODBC.conts!rst1.FieldValTrim!Email1)
				F.Intrinsic.Control.CallSub(cmdadd_click)
			F.Intrinsic.Control.ElseIf(V.ODBC.conts!rst1.FieldValTrim!Email2,<>,V.Ambient.Null,or,V.ODBC.conts!rst1.FieldValTrim!Email2,<>,"")
				Gui.F_ContactList.txtEmail.SetMetaData(V.ODBC.conts!rst1.FieldValTrim!NAME)
				Gui.F_ContactList.txtEmail.Text(V.ODBC.conts!rst1.FieldValTrim!Email2)
				F.Intrinsic.Control.CallSub(cmdadd_click)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndIf
		F.ODBC.conts!rst1.Close
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("Select Name, Alt_ID, Email1, Email2, Name_Last, Name_First from Contact where Cust='{0}' and Type = '{1}' and PRI_CNTCT='1' order by Name_Last, Name_First",V.Global.sCompNo,V.Global.sCompType,V.Local.sSQL)
	F.ODBC.Connection!conts.OpenRecordsetRO("rst2",V.Local.sSQL)
	F.Intrinsic.Control.If(V.ODBC.conts!rst2.EOF,=,False)
		F.Intrinsic.Control.If(V.ODBC.conts!rst2.FieldValTrim!Email1,<>,V.Ambient.Null,or,V.ODBC.conts!rst2.FieldValTrim!Email1,<>,"")
			Gui.F_ContactList.txtEmail.SetMetaData(V.ODBC.conts!rst2.FieldValTrim!NAME)
			Gui.F_ContactList.txtEmail.Text(V.ODBC.conts!rst2.FieldValTrim!Email1)
			F.Intrinsic.Control.CallSub(cmdadd_click)
		F.Intrinsic.Control.ElseIf(V.ODBC.conts!rst2.FieldValTrim!Email2,<>,V.Ambient.Null,or,V.ODBC.conts!rst2.FieldValTrim!Email2,<>,"")
			Gui.F_ContactList.txtEmail.SetMetaData(V.ODBC.conts!rst2.FieldValTrim!NAME)
			Gui.F_ContactList.txtEmail.Text(V.ODBC.conts!rst2.FieldValTrim!Email2)
			F.Intrinsic.Control.CallSub(cmdadd_click)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
	F.ODBC.conts!rst2.Close
F.Intrinsic.Control.EndIf
F.ODBC.conts!rst.Close

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.PopDefaultContact.End

Program.Sub.FillList.Start
F.Intrinsic.Control.Try
V.Local.i.Declare(Long)
V.Local.sEmail.Declare(String)


Gui.F_ContactList.lstEmails.ClearItems

'Fill listbox from memory array
F.Intrinsic.Control.For(V.Local.i,0,V.Global.sList.UBound,1)
	F.Intrinsic.String.Split(V.Global.sList(V.Local.i),"*!*",V.Local.sEmail)
	Gui.F_ContactList.lstEmails.AddItem(V.Local.sEmail(1))
F.Intrinsic.Control.Next(V.Local.i)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.FillList.End

Program.Sub.GetCustInfo.Start
F.Intrinsic.Control.Try
V.Local.sQuery.Declare(String)
V.Local.sCustPO.Declare(String)

F.Intrinsic.String.Build("SELECT NAME_VENDOR FROM V_VENDOR_MASTER WHERE VENDOR='{0}'",V.Global.sCompNo,V.Local.sQuery)
F.ODBC.Connection!conts.OpenRecordsetRO("rstCust",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conts!rstCust.EOF,<>,True)
	V.Global.sCustomer.Set(V.ODBC.conts!rstCust.FieldValTrim!NAME_VENDOR)
F.Intrinsic.Control.EndIf
F.ODBC.conts!rstCust.Close

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.GetCustInfo.End

Program.Sub.PopDefaultText.Start
F.Intrinsic.Control.Try
V.Local.sFile.Declare(String)
V.Local.sText.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sSubject.Declare(String)
V.Local.sBody.Declare(String)
V.Local.sDefaultText.Declare(String)

F.Intrinsic.String.Build("{0}\GAB\GAS\Purchase_Order_PDF.txt",V.Caller.PluginsDir,V.Local.sFile)
F.Intrinsic.File.Exists(V.Local.sFile,V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists,=,False)
	'Creates the default template if it doesn't exist	
	F.Intrinsic.String.Build("Subject*!*Body{0}PO#: %PO%{1}Vendor: %VENDOR%",V.Ambient.NewLine,V.Ambient.NewLine,V.Local.sDefaultText)	
	F.Intrinsic.File.String2File(V.Local.sFile,V.Local.sDefaultText)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.CallSub(Getcustinfo)

F.Intrinsic.File.File2String(V.Local.sFile,V.Local.sText)
F.Intrinsic.String.Replace(V.Local.sText,"%PO%",V.Global.sOrderNo,V.Local.sText)
F.Intrinsic.String.Replace(V.Local.sText,"%VENDOR%",V.Global.sCustomer,V.Local.sText)
F.Intrinsic.String.Split(V.Local.sText,"*!*",V.Local.sText)

V.Local.sSubject.Set(V.Local.sText(0))
F.Intrinsic.Control.If(V.Local.sText.UBound,>,0)
	V.Local.sBody.Set(V.Local.sText(1))
F.Intrinsic.Control.EndIf

Gui.F_ContactList.txtSubject.Text(V.Local.sSubject)
Gui.F_ContactList.mltxtBody.Text(V.Local.sBody)

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.PopDefaultText.End

Program.Sub.lstEmails_Click.Start
	Gui.F_ContactList.txtEmail.Text(V.Screen.F_ContactList!lstEmails.Text)	
Program.Sub.lstEmails_Click.End

Program.Sub.TriggerOutlookMsg.Start
F.Intrinsic.Control.Try
V.Local.i.Declare(Long)

V.Local.sAttach.Declare(String)
V.Local.sParamName.Declare(String)
V.Local.sParamVal.Declare(String)
V.Local.sPN.Declare(String)
V.Local.sPV.Declare(String)
V.Local.sCallParams.Declare(String)
V.Local.iBIRUNID.Declare(Long)
V.Local.iLOGID.Declare(Long)
V.Local.iRet.Declare(Long)
V.Local.iQtyDec.Declare(Long)
V.Local.sSql.Declare(String)
V.Local.bUseVendorCurrency.Declare(boolean)
V.Local.sReportID.Declare(String)
V.Local.sEmail.Declare(String)
V.Local.sSubject.Declare(String)

F.Intrinsic.String.LPad(V.Global.sOrderNo,"0",7,V.Global.sOrderNo)

'check to make sure lines exist for quote first. 
F.Intrinsic.String.Build("Select * from V_PO_LINES where PURCHASE_ORDER = '{0}'",V.Global.sOrderNo,V.Local.sSQL)
F.Data.DataTable.CreateFromSQL("POLines","conts",V.Local.sSQL)
F.Intrinsic.Control.If(V.DataTable.POLines.RowCount,=,0)
	F.Intrinsic.UI.Msgbox("Must save at least one PO line then try again!","Save PO Lines")
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf

'First ensure that the email is populated on the PO Header.
'F.Intrinsic.String.Build("select CONTACT_EMAIL, CONTACT_NAME from V_PO_VENDOR_BUY WHERE VENDOR = '{0}' and PURCHASE_ORDER = '{1}'",V.Global.sCompNo,V.Global.sOrderNo,V.Local.sSQL)
'F.ODBC.Connection!conts.OpenRecordsetRO("rst",V.Local.sSQL)
'F.Intrinsic.Control.If(V.ODBC.conts!rst.EOF,=,False)
'	F.Intrinsic.Control.If(V.ODBC.conts!rst.FieldValTrim!CONTACT_EMAIL,<>,V.Ambient.Null,or,V.ODBC.conts!rst.FieldValTrim!CONTACT_EMAIL,<>,"")
'		V.Local.sEmail.Set(V.ODBC.conts!rst.FieldValTrim!CONTACT_EMAIL)
'	F.Intrinsic.control.Else
'		'prompt to save an email first.
'		F.Intrinsic.UI.Msgbox("Please add primary email to Purchase Order, Save then Try Again")
'		F.Intrinsic.Control.End
'	F.Intrinsic.Control.EndIf
'F.Intrinsic.Control.EndIf
'F.ODBC.conts!rst.Close

'5992 - Pulling email contact from CRM where contact is set to receive e-acknowledgments
F.Intrinsic.String.Build("SELECT A.NAME, A.EMAIL1 FROM CONTACT A LEFT JOIN CRM_CONTACT_AUX B ON A.ALT_ID = B.CID WHERE A.TYPE = 'V' AND A.CUST = '{0}' AND B.E_PROG_SETTINGS = '2'",V.Global.sCompNo,V.Local.sSQL)
F.ODBC.Connection!conts.OpenRecordsetRO("rst",V.Local.sSQL)
F.Intrinsic.Control.If(V.ODBC.conts!rst.EOF,=,False)
	F.Intrinsic.Control.If(V.ODBC.conts!rst.FieldValTrim!EMAIL1,<>,"")
		V.Local.sEmail.Set(V.ODBC.conts!rst.FieldValTrim!EMAIL1)
	F.Intrinsic.control.Else
		'prompt to save an email first.
		F.Intrinsic.UI.Msgbox("In order to email POs to this vendor, you must create a contact in the CRM and check the E-Order Acknowledgement box in Contact Settings.","Vendor contact not setup in CRM!")
		F.Intrinsic.Control.End
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.ODBC.conts!rst.Close

'getting run id and log id
F.Global.BI.GetRunID(V.Local.iBIRUNID)
F.Global.BI.StartLogging(V.Local.iBIRUNID,002801,-1,"",V.Local.iLOGID)

'Set attachment filename and path
F.Intrinsic.String.Build("{0}\Orders\{1}.pdf",V.Caller.PluginsDir,V.Global.sOrderNo,V.Local.sAttach)

'Adding value to QTYDEC param since the decimal values weren't being honored.
'Get Decimal Quantity on PO (Company Options AdV. > Purchasing > Set Decimal Value)
F.ODBC.Connection!conts.OpenLocalRecordsetRO("rst","Select (Case When F_LONG = 1 Then 4 When F_LONG = 2 Then 2  Else 0  End) AS QtyDec FROM OP_HEADER where ID = '400289'")
F.Intrinsic.Control.If(V.ODBC.conts!rst.EOF,=,False)
	V.Local.iQtyDec.Set(V.ODBC.conts!rst.FieldValLong!QtyDec)
F.Intrinsic.Control.EndIf
F.ODBC.conts!rst.Close

'Check if the report should be generated using vendor currency
V.Local.bUseVendorCurrency.Set(V.Screen.F_ContactList!chkUseVendorCurrency.Value)

'Call GS program to build BI table data
F.Intrinsic.Control.If(V.Local.bUseVendorCurrency,=,True)
	F.Intrinsic.String.Build("{0}!*!S!*! !*!N!*!Y",V.Global.sOrderNo,V.Local.sCallParams)	
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("{0}!*!S!*! !*!N!*!N",V.Global.sOrderNo,V.Local.sCallParams)	
F.Intrinsic.Control.EndIf

F.Global.General.CallWrapperSyncBio(915000,V.Local.sCallParams)

'Call BI Order Acknowledgement report
'had to add in the qtydec param, otherwise cr is throwing up with missing parameter values...
V.Local.sPN.Set("Terminal*!*ReportID*!*UseVendorCurr*!*PRTCNFRM*!*PROGRAM*!*PRTHIST*!*QTYDEC")

'Check if the vendor has a custom report id associated to use it instead of default:2801
F.Intrinsic.String.Build("SELECT BI_PO_RPT_ID FROM V_VENDOR_ADDL WHERE VENDOR = '{0}'",V.Global.sCompNo,V.Local.sSql)
F.ODBC.Connection!conts.OpenLocalRecordsetRO("rst",V.Local.sSql)
F.Intrinsic.Control.If(V.ODBC.conts!rst.EOF,=,False)
	F.Intrinsic.Control.If(V.ODBC.conts!rst.FieldValTrim!BI_PO_RPT_ID,=,V.Ambient.Null,or,V.ODBC.conts!rst.FieldValTrim!BI_PO_RPT_ID,=,"000000",V.ODBC.conts!rst.FieldValTrim!BI_PO_RPT_ID,=,"0")
		'Set the default report id 
		V.Local.sReportID.Set("002801")	
	F.Intrinsic.Control.Else	
		'Set the custom report id for the vendor
		V.Local.sReportID.Set(V.ODBC.conts!rst.FieldValTrim!BI_PO_RPT_ID)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.If(V.Local.bUseVendorCurrency,=,True)	
	F.Intrinsic.String.Build("{0}*!*{1}*!*Y*!* *!* *!* *!*{2}*!* *!*",V.Caller.Terminal,V.Local.sReportID,V.Local.iQtyDec,V.Local.sPV)
F.Intrinsic.Control.Else	
	F.Intrinsic.String.Build("{0}*!*{1}*!* *!* *!* *!* *!*{2}*!* *!*",V.Caller.Terminal,V.Local.sReportID,V.Local.iQtyDec,V.Local.sPV)
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Split(V.Local.sPN,"*!*",V.Local.sParamName)
F.Intrinsic.String.Split(V.Local.sPV,"*!*",V.Local.sParamVal)

F.Global.BI.StopLogging(V.Local.iLOGID)

F.Global.BI.RunReportPreProcessor(V.Local.iBIRUNID,V.Local.iLOGID,V.Local.sPN,V.Local.sPV,"",4,True,"",-1,"",0,V.Local.sAttach,"",V.Local.iRet)

'set subject
F.Intrinsic.String.Build("Purchase Order: {0}",V.Global.sOrderNo,V.Local.sSubject)

V.Local.sParamVal.Redim(0,0)
V.Local.sPV.Redim(0,0)
'reusing ParamVal for calling other script async.
F.Intrinsic.String.Build("{0}\GCG_5992_SendOutlookEmail.g2u",V.Caller.GasDir,V.Local.sParamVal)
F.Intrinsic.String.Build("{0}!*!{1}!*!{2}",V.Local.sEmail,V.Local.sSubject,V.Local.sAttach,V.Local.sPV)
'calling other script so it does not lock screen
F.Global.General.CallAsyncGAS(V.Local.sParamVal,V.Local.sPV,2,V.Local.iRet)
F.Intrinsic.UI.CloseWaitDialog
'F.Automation.MSOutlook.ComposeEmailHTMLModal(V.Local.sEmail,V.Local.sSubject,"",V.Local.sAttach)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.TriggerOutlookMsg.End

Program.Sub.SetIcon.Start
F.Intrinsic.Control.Try
V.Local.sForm.Declare
V.Local.bExists.Declare
V.Local.sIcon.Declare
V.Local.iCounter.Declare

F.Intrinsic.String.Build("{0}\ART\gss2.ico",V.Caller.GlobalDir,v.Local.sIcon)
F.Intrinsic.File.Exists(V.Local.sIcon, V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists.Not)
    F.Intrinsic.String.Build("{0}\GAB\GAS\gss2.ico",V.Caller.PluginsDir,v.Local.sIcon)
    F.Intrinsic.File.Exists(V.Local.sIcon, V.Local.bExists)
    F.Intrinsic.Control.If(V.Local.bExists.Not)
        F.Intrinsic.Control.ExitSub
    F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf

F.Intrinsic.UI.GetFormList(V.Local.sForm)
F.Intrinsic.String.Split(V.Local.sForm, "*!*", V.Local.sForm)

F.Intrinsic.Control.For(V.Local.iCounter, 0, V.Local.sForm.UBound, 1)
    Gui.[V.Local.sForm(V.Local.iCounter)]..Icon(V.Local.sIcon)
F.Intrinsic.Control.Next(V.Local.iCounter)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(Error,"SubRoutine",V.Ambient.CurrentSubroutine,"eNumber",V.Ambient.ErrorNumber,"eDescription",V.Ambient.ErrorDescription)
F.Intrinsic.Control.EndTry
Program.Sub.SetIcon.End

Program.Sub.Error.Start
V.Local.sError.Declare
V.Local.iRet.Declare
V.Local.sSep.Declare

F.Intrinsic.String.Build("-------------------------------------------------------------------------------------",,V.Local.sSep)
F.Intrinsic.String.Build("({5}-{6}){0}{7}{0}Project: {4}{0}{7}{0}Sub: {1}{0}Error: {2}, {3}", V.Ambient.NewLine, V.Args.SubRoutine, V.Args.eNumber, V.Args.eDescription,V.Caller.ScriptFile,V.Ambient.Date, V.Ambient.Time,V.Local.sSep,V.Local.sError)
F.Intrinsic.UI.Msgbox(V.Local.sError,"Error",V.Local.iRet)
Program.Sub.Error.End